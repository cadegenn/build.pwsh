language: minimal

env:
  - PWSHFW_VERSION=2.1.3.257

matrix:
  include:
    # - os: linux
    #   dist: trusty
    #   sudo: false
    #   addons:
    #     apt:
    #       sources:
    #         - sourceline: "deb [arch=amd64] https://packages.microsoft.com/ubuntu/14.04/prod trusty main"
    #           key_url: "https://packages.microsoft.com/keys/microsoft.asc"
    #       packages:
    #         - fakeroot
    #         - powershell
    #       update: true
    - os: linux
      dist: bionic
      sudo: false
      addons:
        apt:
          sources:
            - sourceline: "deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod bionic main"
              key_url: "https://packages.microsoft.com/keys/microsoft.asc"
          packages:
            - fakeroot
            - powershell
          update: true
      before_install:
        - pwd
        - echo "Pass 01 before_install [linux/bionic]"
        - wget https://github.com/cadegenn/pwsh_fw/releases/latest/download/pwshfw-$PWSHFW_VERSION-all.deb
        - ls -aldFh
        - sudo dpkg -i ./pwshfw-$PWSHFW_VERSION-all.deb
    - os: osx
      osx_image: xcode10
      before_install:
        - echo "Pass 01 before_install [osx/xcode10]"
        - brew tap caskroom/cask
        - brew cask install powershell
        # - brew install wget # already installed
        - wget https://github.com/cadegenn/pwsh_fw/releases/latest/download/Tiny.PowerShell.Framework-$PWSHFW_VERSION.pkg
        - sudo installer -pkg Tiny.PowerShell.Framework-$PWSHFW_VERSION.pkg -target /
  fast_finish: true

before_install:
  - echo "Pass 01 before_install"

install:
  - echo "Pass 02 install"
  # - sudo pwsh -c 'Install-Module Pester -Force'
  # - sudo pwsh -c 'Install-Module -Name PesterMatchHashtable -Confirm:$false -Force'
  # - sudo pwsh -c  "& ./install-modules.ps1 -d -dev -api ."

before_script:
  - echo "Pass 03 before_script"
  # - pwsh -f "${env:TRAVIS_BUILD_DIR}/build.ps1"
  # - pwsh -c ./scripts/os.ps1 -d -dev -api .
  # - pwsh -c "Invoke-Pester -Script ./tests/*"

script:
  - echo "Pass 04 script"
  # - pwsh -f "${env:TRAVIS_BUILD_DIR}/test.ps1"
  # - ${TRAVIS_BUILD_DIR}/build/debian/build-travis.sh
  - pwsh -c ./build.ps1 -d -dev -ProjectPath .

before_cache:
  - echo "Pass 05 before_cache"

after_success:
  - echo "Pass 06 after_success"
  # - pwsh -f "${env:TRAVIS_BUILD_DIR}/deploy.ps1"

after_falure:
  - echo "Pass 06 after_failure"
  # - pwsh -f "${env:TRAVIS_BUILD_DIR}/deploy.ps1"

before_deploy:
  - echo "Pass 07 before_deploy"

deploy:
  api_key:
    # curl -H "Authorization: token **TOKEN**" https://api.travis-ci.com/v3/repo/cadegenn%2fuild.pwsh/key_pair/generated
    # TOKEN can be found on user profile page on travis-ci.org
    secure: MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEArKxQOb3zku+rMfN0vUQK\n2TnKJcpOkFXrJlN+o15fS/w3K8IssYixErBoUFnqEXByBDThKVdLDUUDQrkfiCbG\nTVp1X1gAx6M/CuqXqdO2uGmQwAzEyQdT4u+eMPYtBHGexR6VI7jRvY6Q1DkIkPeF\nB+BxYjb+AFc74yVYk0lnb5tFaUiwwkAywRpMTabbtulF1GxNX1pfqZY9Pd+7L2Ly\nOqsCkmkgFFIR9qtCqylvGCrEnZ7g40bD1fopecue98HXkfolhjtLfVh1Db02oR/j\nyEklDN9jWKBmt1/Bz132tLtU98cwceZBBUsgMEQrJ80fgYP4OBzrZwE12yJrIPBo\nvj+G9BlQ/cNnjcXlqU3a7VHCNTdgB7/6dGV4ifQkCPypMrwENP5XSSCdIxRhx4sp\nIkMKllqL7uplYLoEVteEw6Jpp3ry7Z2fVuYOFuHNrhU1tyQyoi1DUa0hveKqR4Gg\nNVVghvJZ7ll2ZZIOxuxd/rFUcc7AB+EuwK+jJ3CfpOid62KA4bhYaXqUGLLDDE6o\nb3nFKCQN/PAH0rqIVSHsaUrrn+r2hbs72SgLYfJK1YXGjDIyrb4yuj4f5lGgEeNq\nh1UJ25D9vJyQKsWp4AINb9dQ6r2BFltrScz4wagSKAUckT/IF//DQFGwmgWPZCD+\nkvuC5T2Fa31ljtVrKt+NDEcCAwEAAQ==
  # file: "${TRAVIS_BUILD_DIR}/releases/debian/pwshfw-${TRAVIS_BUILD_VERSION}-all.deb"
  target_commitish: $TRAVIS_COMMIT # <--------both used
  tag_name: $TRAVIS_TAG # <--------both used
  file_glob: true
  file: releases/*
  overwrite: true
  skip_cleanup: true
  provider: releases
  draft: true
  prerelease: true
  on:
    branch: develop
    tags: true
  # - provider: releases
  #   draft: false
  #   prerelease: false
  #   on:
  #     branch: master
  #     tags: true

after_deploy:
  - echo "Pass 09 after_deploy"

after_script:
  - echo "Pass 10 after_script"

